user  nginx;
worker_processes  auto;
load_module modules/ngx_http_app_protect_module.so;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

## Test123

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" '
                  '"$bytes_sent" "$request_length" "$request_time" '
                  '"$gzip_ratio" $server_protocol ';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    proxy_cache_path /data/nginx/cache_backend1 keys_zone=cache_backend1:10m;
    proxy_cache_path /data/nginx/cache_backend2 keys_zone=cache_backend2:10m;
 
    #####gzip  on;

    server {
        listen 10.1.1.6:8080;
        location / {
           proxy_pass http://nginx;
            #app_protect_enable on;
            #app_protect_policy_file /etc/nms/default-enforcement6.tgz
            #app_protect_security_log_enable on;
            #app_protect_security_log /etc/nms/secops_dashboard.tgz syslog:server=127.0.0.1:514;            
        }
        location /2 {
           proxy_pass http://nginx;
           #app_protect_enable on;
           #app_protect_policy_file /etc/nms/ignore-xss.tgz;
           #app_protect_security_log_enable on;
           #app_protect_security_log /etc/nms/secops_dashboard.tgz syslog:server=127.0.0.1:514;
         }
    }
        
    server {
        listen 9091;
        return 200 "hello from http workload 1 \n";
    }     
    server {
        listen 9092;
        return 200 "hello from http workload 2 \n";
    }
    server {
        listen 9093;
        return 200 "hello from stream workload 1 \n";
    }

    upstream nginx {
        server 127.0.0.1:3002;
    }
 
    upstream nginx1 {
        server 127.0.0.1:9091;
        zone my_backend1 1000000;
        keepalive 32;
        queue 10;
    }
    upstream nginx2 {
        server 127.0.0.1:9092;
        zone my_backend2 1000000;
        keepalive 32;
        queue 20;
    }
 
    server {
        status_zone my_frontend1;
        listen 127.0.0.1:8081;
        location /frontend1 {
            proxy_pass http://nginx1;
            proxy_cache cache_backend1;
            status_zone my_location_zone;
        }
    }
    server {
        status_zone my_frontend2;
        listen 127.0.0.1:8082;
        location /frontend2 {
            proxy_pass http://nginx2;
            proxy_cache cache_backend2;
            status_zone my_location_zone;
            }
        }
    include /etc/nginx/conf.d/*.conf;

    server {
        listen 127.0.0.1:9090;
        location /api {
            api write=on;
            allow 127.0.0.1;
            deny all;
        }
    }
}

stream {
    # Example configuration for TCP load balancing
 
    upstream nginx3 {
        zone my_stream_backend 64k;
        server 127.0.0.1:9093;

    }
 
    log_format basic '$remote_addr [$time_local] '
                     '$protocol $status $bytes_sent $bytes_received '
                     '$session_time';
    access_log /var/log/nginx/access.log basic;
 
    server {
        listen 8083;
        proxy_pass nginx3;
        status_zone tcp_stream_server;

    }
}
