
name: Managing NGINX configs with Github and Github Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  N1SC_Publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
            
      - name: Set misc environment variables 
        run: |
          echo "XC_BEARER_TOKEN=`echo -n "${{ secrets.XC_BEARER_TOKEN }}`" >> $GITHUB_ENV
          echo "N1SC_TIMESTAMP=`date -u +"%Y-%m-%dT%H:%M:%SZ"`" >> $GITHUB_ENV
          echo "N1SC_COMMIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "N1SC_BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Set environment variable for base64 encoded config files
        run: |
          echo "NGINX_CONF_CONFIG_FILE=`echo \# Modified by NGINX One API $(date) branch: ${{ env.N1SC_BRANCH }} commit hash: ${{ env.N1SC_COMMIT_HASH }} | cat - app-nyc-01/etc/nginx/nginx.conf | base64 -w 0`" >> $GITHUB_ENV
          echo "MIME_TYPES_CONFIG_FILE=`cat app-nyc-01/etc/nginx/mime.types | base64 -w 0`" >> $GITHUB_ENV
          echo "DEFAULT_CONF_CONFIG_FILE=`cat app-nyc-01/etc/nginx/conf.d/default.conf | base64 -w 0`" >> $GITHUB_ENV
          echo "SSL_CERT=`cat app-sfo-01/etc/nginx/ssl/expiring.nginx.com.crt | base64 -w 0`" >> $GITHUB_ENV
          echo "SSL_KEY=`cat app-sfo-01/etc/nginx/ssl/expiring.nginx.com.key | base64 -w 0`" >> $GITHUB_ENV

      - name: API call to NGINX One Saas Console
        run: |
          curl --location 'https://${{ vars.N1SC_HOSTNAME }}${{ vars.N1SC_API_PATH }}/${{ vars.N1SC_NAMESPACE }}/instances/?filter_fields=instance_status&filter_ops=IN&filter_values=online&paginated=false' -H 'Authorization: Bearer ${{ secrets.XC_BEARER_TOKEN }}' > instance_list.json
          # app-nyc-01_instance_summary=$(jq '.' instance_list.json)

      - name: API call to NGINX One Saas Console
        run: |
          curl -X PUT --location 'https://nginxone-team.staging.volterra.us/api/nginx/one/namespaces/default/instances/${{ vars.N1SC_INSTANCE }}/config' -H 'Authorization: Bearer ${{ secrets.XC_BEARER_TOKEN }}' --data '{ "aux": [], "conf_path": "/etc/nginx/nginx.conf", "configs": [ { "files": [ { "contents": "${{ env.NGINX_CONF_CONFIG_FILE }}", "mtime": "1970-01-01T00:00:00Z", "name": "nginx.conf", "size": 2756 }, { "contents": "${{ env.MIME_TYPES_CONFIG_FILE }}", "mtime": "1970-01-01T00:00:00Z", "name": "mime.types", "size": 2756} ], "name": "/etc/nginx" }, { "files": [ { "contents": "${{ env.DEFAULT_CONF_CONFIG_FILE }}", "mtime": "1970-01-01T00:00:00Z", "name": "default.conf", "size": 908 } ], "name": "/etc/nginx/conf.d" }], "object_id": "nc_Mw2aZnqkSkyB6g3dR6BdGw" }' -H "Content-Type: application/json"
