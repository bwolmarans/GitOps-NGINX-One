{
	"info": {
		"_postman_id": "8ddc9e3c-b1c2-4719-b9e1-50afc0045e12",
		"name": "NGINX One v1.0",
		"description": "Manage your NGINX data plane instances, view security advisories (CVEs), and analyze NGINX configurations for issues and recommendations.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4392032"
	},
	"item": [
		{
			"name": "instances",
			"item": [
				{
					"name": "summary",
					"item": [
						{
							"name": "Retrieve a summary for all instances",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}{{fqdn}}{{api_base_path}}/instances/summary?filter_fields=instance_status&filter_ops=IN&filter_values=online",
									"host": [
										"{{protocol}}{{fqdn}}{{api_base_path}}"
									],
									"path": [
										"instances",
										"summary"
									],
									"query": [
										{
											"key": "filter_fields",
											"value": "instance_status"
										},
										{
											"key": "filter_ops",
											"value": "IN"
										},
										{
											"key": "filter_values",
											"value": "online"
										}
									]
								},
								"description": "Retrieves a comprehensive summary for all NGINX instances, which includes details such as:\n  * Certificate status and associations\n  * Operating system details\n  * Version of the NGINX Agent\n  * Overall system status\n"
							},
							"response": [
								{
									"name": "Successfully retrieved the summary of NGINX instances.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												"summary"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/InstanceSummary not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Access denied.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												"summary"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "An unexpected error occurred on the server. Please try the request again later.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												"summary"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{instanceObjectID}",
					"item": [
						{
							"name": "cves",
							"item": [
								{
									"name": "Retrieve an instance's security advisories (CVEs)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID/cves",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID",
												"cves"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										},
										"description": "Retrieves a list of the security advisories (CVEs) for an NGINX instance."
									},
									"response": [
										{
											"name": "Successfully retrieved the list of security advisories (CVEs).",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/cves",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"cves"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference ../../common.yaml#/components/schemas/NginxSecurityAdvisory not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference ../../common.yaml#/components/schemas/NginxSecurityAdvisory not found in the OpenAPI spec\"\n  }\n]"
										},
										{
											"name": "Access denied.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/cves",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"cves"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/cves",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"cves"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/cves",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"cves"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "config-report",
							"item": [
								{
									"name": "Retrieve an analysis report for an instance's configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID",
												"config-report"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										},
										"description": "Analyzes the configuration of an NGINX instance and returns a detailed report.\nThe report includes insights, identified issues, and recommendations for optimizing and troubleshooting.\n"
									},
									"response": [
										{
											"name": "Successfully retrieved the NGINX configuration analysis for the specified instance.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfigReports not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								},
								{
									"name": "Generate an analysis report for the provided configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID",
												"config-report"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										},
										"description": "Returns an analysis report for the provided NGINX configuration. This report includes insights, identified issues, and recommendations for optimizing and troubleshooting. Note that this operation is for analysis purposes only and does not apply any changes to the configuration. The report is not stored and is provided only in the API response. To publish the configuration, use the `PUT /instances/{instanceObjectID}/config` endpoint."
									},
									"response": [
										{
											"name": "Successfully analyzed the provided NGINX configuration.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfigReports not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Request cannot be processed due to invalid input or parameters. Verify the request format and provided data.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Access denied.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								},
								{
									"name": "Generate an analysis report for the provided modified configuration",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID",
												"config-report"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										},
										"description": "Analyzes the provided partial updates to an existing NGINX configuration and generates a report detailing potential issues along with optimization suggestions. \nThis analysis accounts for additive updates made to `NginxConfig`. To delete files, omit the `file.contents` field. \nThis method compares the provided `config_version` with the current NGINX instance configuration to detect conflicts, which may arise if the `config_version` does not match due to an out-of-band update. \nNote that this operation is for analysis purposes only and does not apply any changes to the configuration. \nThe report is not stored and is provided only in the API response.\nTo publish the configuration, use the `PATCH /instances/{instanceObjectID}/config` endpoint.\n"
									},
									"response": [
										{
											"name": "Successfully analyzed the provided NGINX configuration.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfigReports not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Request cannot be processed due to invalid input or parameters. Verify the request format and provided data.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Access denied.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config-report",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config-report"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "config",
							"item": [
								{
									"name": "Retrieve an instance's configuration details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/{{instance_id}}/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												"{{instance_id}}",
												"config"
											]
										},
										"description": "Returns the configuration details for an NGINX instance, including: \n* Main configuration path\n* Details about configuration files\n* Details about auxiliary files\n* Unique identifiers\n"
									},
									"response": [
										{
											"name": "Successfully retrieved the configuration details for the specified NGINX instance.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Access denied.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								},
								{
									"name": "Publish a configuration to an instance",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    var pi = jsonData.object_id;\r",
													"    console.log(\"publication id: \" + pi);\r",
													"    pm.collectionVariables.set(\"publication_id\", pi);\r",
													"    var hh = pm.collectionVariables.get(\"publication_id\");\r",
													"    console.log(\"publication id as set in the collection variables: \" + hh);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aux\": [\n        {\n            \"files\": [\n                {\n                    \"contents\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRekNDQWlzQ0ZDTXJrdGJLMmxOSVdML041bjJ5UDJrTjRlUjBNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1GNHgKQ3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkdUREVPTUF3R0ExVUVCd3dGVFdsaGJXa3hFREFPQmdOVgpCQW9NQjBKeVpYUjBZMjh4SURBZUJnTlZCQU1NRjI5bVptbGpaV1J2Wnk1M2IyeHRZWEpoYm5NdVkyOXRNQjRYCkRUSTBNRGd3TVRBeE1UWXpNRm9YRFRJMU1EVXlPREF4TVRZek1Gb3dYakVMTUFrR0ExVUVCaE1DVlZNeEN6QUoKQmdOVkJBZ01Ba1pNTVE0d0RBWURWUVFIREFWTmFXRnRhVEVRTUE0R0ExVUVDZ3dIUW5KbGRIUmpiekVnTUI0RwpBMVVFQXd3WGIyWm1hV05sWkc5bkxuZHZiRzFoY21GdWN5NWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUUMreUdvWlo2dGtzcS9VRUx2WGJkVXJ1WDhDd1l2SGlFUGo4cDVoNDFPVnQzbFQKOUZ0OE5OcUVSRkQ4UytUTzUxYUM4OEFnVmREUzF1d0dFN29QUTFlRkNOWURtVmRyY1AvWkRUMy9EZ2dTMXJvSgpZK2lwZHEwTU16WW55SzF0RWVmbzk5d0ZMOTIrNUlrbk9hOUFXRDFOcG5oWWNqQm56Z0hPZkJpbWRvUnFaYkFwClBGQ0pkanFMQmFpTFZyRHFQM0dSbkp1UDllOTFreElyVGhxbmVCMTBRNzYwUFIxWkJ4V3ZvditHYTFDdXZsZy8KM1ZkN3NuWWxFVmtFQnZUTzdoUnF4N2pTekRMZjMwRHVpbDI3bFpJVU9TTTVxeHYrL0FURnRWeUp0SWVRUTBmQwoyQzYrV0JDVlNiYi9leUdoWE5ERmVCTC9XMlZlNHJMVG9jaXNMU1paQWdNQkFBRXdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUtDRUZML3BKeDIxVUZnZThFaWRDcTlhWUUzcnJrcHVtVThYNURKOUtsMmRxb2lVMldLVjZTaVAKVFhYVGo4Q3VQQ1VRZlN1M0JWM2VzMC9WU1QxUEdaR0piKzZ4NDNYM3N4cTJoY2VvbVpSMnJvQllzNk9GSXZGNApsT3hGM0VzbTVpcGIyRkdNclZob1dwRDVLb1F5MnU4TE90aXpIVjY0eURRYlQyTER3QmhZN25VVlNJRS9tWWYvCld3RTJkb3BDY0pWNk5KSmlDMWdMTVYwc2N1dWR4TFZ0QWtNNGVqOU5sMEhBNHRIeHBJRURDRkVCYXpUU3FSbTAKOThkL21VdDkvcm05clFFZkRPOVY4Ni9aQjVvUEVDTTV1cnNucTlOYXVkZVhDWjNHMVU4V0VLb2I2K3JYZ1Y1YwpFYnBmcUpkRlM4YWpxNk5hUlFGL0dOVWlpc2x5OWJZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n                    \"mtime\": \"0001-01-01T00:00:00Z\",\n                    \"name\": \"cert-300-days.crt\",\n                    \"size\": 1192\n                },\n                {\n                    \"contents\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRVENDQWlrQ0ZDWGF1RFo2V2pBMlpjSHlVdEhxOEFCaEVHNUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1GMHgKQ3pBSkJnTlZCQVlUQWtGVk1STXdFUVlEVlFRSURBcFRiMjFsTFZOMFlYUmxNU0V3SHdZRFZRUUtEQmhKYm5SbApjbTVsZENCWGFXUm5hWFJ6SUZCMGVTQk1kR1F4RmpBVUJnTlZCQU1NRFhkM2R5NWljbVYwZEM1amIyMHdIaGNOCk1qUXdOVEUxTVRjMU9USXdXaGNOTWpRd09ERXpNVGMxT1RJd1dqQmRNUXN3Q1FZRFZRUUdFd0pCVlRFVE1CRUcKQTFVRUNBd0tVMjl0WlMxVGRHRjBaVEVoTUI4R0ExVUVDZ3dZU1c1MFpYSnVaWFFnVjJsa1oybDBjeUJRZEhrZwpUSFJrTVJZd0ZBWURWUVFEREExM2QzY3VZbkpsZEhRdVkyOXRNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwSG1HYUlFSlhqTkE0NWVFZ1dFSzNQVVVLamdGN1dvY1NsYTFZVERJQzRrMmM3Z3EKaERTMHNZaTFNYk1kWFFNY1ZNd2F6aU9tZDFacnFCa2tXTHNROWQwekxKR1BTNFJQRjZpRjZBMURMTmhPMmlkcQprTkQ2dzVBVWpBaVd0NHpjUjRFZ2crTDlkZFB6b01lODFpR0Nhc1ZOc2Rna0lOSUJ0Rk9ISlJweC85N3BXRG80Ck02MkhSZFFOSmNyWldMQVBDbFFhZlJPNXVvZzZhalRIeWJ3VEp6aHBVYmRrcUJFcm8xV2F4OTV2eXZ2Q3gya2gKNTJ1WCs0bnpyY2NZcU9JcXFFVWlKb1o3UDh5cWtGVVBnQng4UmtIQ3cvcFVBZ1NkMlRxMkVRN0FoQmsxb1p5UApYcHdoODFKeGVDWFJhWHkzblhpUXFyYW9TNEVaRHZ3d1pYakFWd0lEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUNFb1FOUjk2QitQaGV3ZHIvOUQvS1ZDVm44N1hYN2pQVXdoeTVDYW00SE5aM0VGUzE5dXpqU0lpYmEKZnMzNkNReXJjWG1pTys5bVM3VW4wRVF2QU1zVko0T2FSVzdkTVlUM25hTzhHMHlqd1J2L090NVBiZzBqK0tvUAoyQmZJTTN4RnhmZnp5dFgzS2I1SG8wREZNU3ozWWh6a1JWV0FTWnZYV2pxd0duUWRFSDNBUGVFTkY4UXZTKzdECjJvcVdXdmZXKy9tMGp1WjVuc0t5Ukh1cUcwWk5mcXF5eE1mSWFybjlESmwxLzM3M0lTUzV5elVmSk0yVjc4WXgKTTNDNnBOL2wxalFuL1dMSW9BQWU1Vng1Z0FPbm5MbVRoTkhYTkMvdGdzTElnYXdnZ1M3bksvb2RBU2JvazhUYQpHRUhEVXVuOHRIcUxHVFMyU3NBYmJpa0c0U2E1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\",\n                    \"mtime\": \"0001-01-01T00:00:00Z\",\n                    \"name\": \"expired.crt\",\n                    \"size\": 1188\n                },\n                {\n                    \"contents\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0akNDQXA2Z0F3SUJBZ0lVYWN6aklrcmsrSEhLUlVVTEc2QnQvMU9sNE9jd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2JERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdNQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjTQpEVk5oYmlCR2NtRnVZMmx6WTI4eEZEQVNCZ05WQkFvTUMwNUhTVTVZTENCSmJtTXVNUm93R0FZRFZRUUREQkZsCmVHRnRjR3hsTG01bmFXNTRMbU52YlRBZUZ3MHlOREEzTXpBeE9ESXhOVFphRncweU5EQTRNRGt4T0RJeE5UWmEKTUd3eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlEQXBEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIREExVApZVzRnUm5KaGJtTnBjMk52TVJRd0VnWURWUVFLREF0T1IwbE9XQ3dnU1c1akxqRWFNQmdHQTFVRUF3d1JaWGhoCmJYQnNaUzV1WjJsdWVDNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ24KN1RUa2xvZElXYmt0MDcrb3Z2dHBienBPeVFxRFlaNThON0M0MWxYOXRhamF5T3d5aDllMDI2NUp0ckJLaXNLTgp4Q2dOVUlWMlFDSENPME51aGpUTUt1aVJ5OVpKOEpIK1VxQ0YvTTdPTDUyUkcxOWtGalJhRjl0MkNhMlE2S0tHCmtHUzFFYmM2emtJOXpmSjlQYlVCNS9idHZrUVl0VGhUeGtVYnRrdVlzZFFROU1xM2MwcXJSU0JyUnF0YTlKV1cKbDlJSnpac0JmZktEYkQxWnV5M2hZS2N3UUl4NWJwRnI4dDdmWjZ0aUZTdTY4ZXZROEVxdmQyaUlwaWV1VEFGSQo4emR2VTAyUzBLL29YRXg5SldGaWlCeFZyY25hZzlzTnluOCtLbEhTYUVhYkRNOWt6dEZJcURxVTdIU0taM2dnCnZrUnBRRDBYN1E0anRiNHo0bmp4QWdNQkFBR2pVREJPTUV3R0ExVWRFUVJGTUVPQ0dXNW5hVzU0TFcxaGJtRm4KWlhJdVpYaGhiWEJzWlM1amIyMkNCbk5sY25abGNvSU5ibWRwYm5ndGJXRnVZV2RsY29JSmJHOWpZV3hvYjNOMApod1IvQUFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2N0blZNNVhjTkhjZ1k0bmQ1alVqRnEwZFJmWDhXCnhuN0VkeWhnUDIwdExNcTVlZXhPdHNHNGRQdFN4Y0lTdXlPcHF3alBoanUzbWlHU2xLV0tPVS90OUVDaXJ3OEwKckdQZXJoYmp0Q2J5RldzRUFoNGNTN1lMU25sM3Z5eWxnOXl5WXdoUXRoemgrb2J0NFdwSnY1NklBZEd0dVY5cwpIMGh2UUx3NXNROHIvYy9EV3k1Qnd3Mm5DYlhmZjRRbkRLcnJSSUF6TndFTFM0bFR3R1F1RkJ6cXNESlZsMDlpCkN6ZnowMHdIREhYNGI2blRQV0ZsbXhJTWNDYVdxTmlWL3hyU1BYR1RiTzdTYytMRG5NVnJ0TE5NQ2QzWTVjMGgKbG83WlBPQXJKdHlrS2dORGpKSmw0aTlVZWFWZVg1R21kUUJ1eVRsZzRCbW1vZkFjR3grUWNDUTcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n                    \"mtime\": \"0001-01-01T00:00:00Z\",\n                    \"name\": \"test.crt\",\n                    \"size\": 1346\n                }\n            ],\n            \"name\": \"/etc/nginx/ssl\"\n        }\n    ],\n    \"conf_path\": \"/etc/nginx/nginx.conf\",\n    \"config_version\": \"5ae4aaab-07db-312c-be76-9c6b287a1c5d\",\n    \"configs\": [\n        {\n            \"files\": [\n                {\n                    \"contents\": \"CnR5cGVzIHsKICAgIHRleHQvaHRtbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sIGh0bSBzaHRtbDsKICAgIHRleHQvY3NzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3M7CiAgICB0ZXh0L3htbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sOwogICAgaW1hZ2UvZ2lmICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdpZjsKICAgIGltYWdlL2pwZWcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqcGVnIGpwZzsKICAgIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQgICAgICAgICAgICAgICAgICAgICAgICAgICBqczsKICAgIGFwcGxpY2F0aW9uL2F0b20reG1sICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdG9tOwogICAgYXBwbGljYXRpb24vcnNzK3htbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJzczsKCiAgICB0ZXh0L21hdGhtbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW1sOwogICAgdGV4dC9wbGFpbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4dDsKICAgIHRleHQvdm5kLnN1bi5qMm1lLmFwcC1kZXNjcmlwdG9yICAgICAgICAgICAgICAgICBqYWQ7CiAgICB0ZXh0L3ZuZC53YXAud21sICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd21sOwogICAgdGV4dC94LWNvbXBvbmVudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0YzsKCiAgICBpbWFnZS9wbmcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG5nOwogICAgaW1hZ2Uvc3ZnK3htbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN2ZyBzdmd6OwogICAgaW1hZ2UvdGlmZiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpZiB0aWZmOwogICAgaW1hZ2Uvdm5kLndhcC53Ym1wICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdibXA7CiAgICBpbWFnZS93ZWJwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2VicDsKICAgIGltYWdlL3gtaWNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY287CiAgICBpbWFnZS94LWpuZyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgam5nOwogICAgaW1hZ2UveC1tcy1ibXAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJtcDsKCiAgICBmb250L3dvZmYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd29mZjsKICAgIGZvbnQvd29mZjIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b2ZmMjsKCiAgICBhcHBsaWNhdGlvbi9qYXZhLWFyY2hpdmUgICAgICAgICAgICAgICAgICAgICAgICAgamFyIHdhciBlYXI7CiAgICBhcHBsaWNhdGlvbi9qc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbjsKICAgIGFwcGxpY2F0aW9uL21hYy1iaW5oZXg0MCAgICAgICAgICAgICAgICAgICAgICAgICBocXg7CiAgICBhcHBsaWNhdGlvbi9tc3dvcmQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jOwogICAgYXBwbGljYXRpb24vcGRmICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBkZjsKICAgIGFwcGxpY2F0aW9uL3Bvc3RzY3JpcHQgICAgICAgICAgICAgICAgICAgICAgICAgICBwcyBlcHMgYWk7CiAgICBhcHBsaWNhdGlvbi9ydGYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcnRmOwogICAgYXBwbGljYXRpb24vdm5kLmFwcGxlLm1wZWd1cmwgICAgICAgICAgICAgICAgICAgIG0zdTg7CiAgICBhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWVhcnRoLmttbCt4bWwgICAgICAgICAgICAga21sOwogICAgYXBwbGljYXRpb24vdm5kLmdvb2dsZS1lYXJ0aC5rbXogICAgICAgICAgICAgICAgIGttejsKICAgIGFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbCAgICAgICAgICAgICAgICAgICAgICAgICB4bHM7CiAgICBhcHBsaWNhdGlvbi92bmQubXMtZm9udG9iamVjdCAgICAgICAgICAgICAgICAgICAgZW90OwogICAgYXBwbGljYXRpb24vdm5kLm1zLXBvd2VycG9pbnQgICAgICAgICAgICAgICAgICAgIHBwdDsKICAgIGFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuZ3JhcGhpY3MgICAgICBvZGc7CiAgICBhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnByZXNlbnRhdGlvbiAgb2RwOwogICAgYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5zcHJlYWRzaGVldCAgIG9kczsKICAgIGFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQudGV4dCAgICAgICAgICBvZHQ7CiAgICBhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2VudGF0aW9ubWwucHJlc2VudGF0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHB0eDsKICAgIGFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC5zcHJlYWRzaGVldG1sLnNoZWV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeGxzeDsKICAgIGFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC53b3JkcHJvY2Vzc2luZ21sLmRvY3VtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jeDsKICAgIGFwcGxpY2F0aW9uL3ZuZC53YXAud21sYyAgICAgICAgICAgICAgICAgICAgICAgICB3bWxjOwogICAgYXBwbGljYXRpb24vd2FzbSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhc207CiAgICBhcHBsaWNhdGlvbi94LTd6LWNvbXByZXNzZWQgICAgICAgICAgICAgICAgICAgICAgN3o7CiAgICBhcHBsaWNhdGlvbi94LWNvY29hICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2NvOwogICAgYXBwbGljYXRpb24veC1qYXZhLWFyY2hpdmUtZGlmZiAgICAgICAgICAgICAgICAgIGphcmRpZmY7CiAgICBhcHBsaWNhdGlvbi94LWphdmEtam5scC1maWxlICAgICAgICAgICAgICAgICAgICAgam5scDsKICAgIGFwcGxpY2F0aW9uL3gtbWFrZXNlbGYgICAgICAgICAgICAgICAgICAgICAgICAgICBydW47CiAgICBhcHBsaWNhdGlvbi94LXBlcmwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGwgcG07CiAgICBhcHBsaWNhdGlvbi94LXBpbG90ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJjIHBkYjsKICAgIGFwcGxpY2F0aW9uL3gtcmFyLWNvbXByZXNzZWQgICAgICAgICAgICAgICAgICAgICByYXI7CiAgICBhcHBsaWNhdGlvbi94LXJlZGhhdC1wYWNrYWdlLW1hbmFnZXIgICAgICAgICAgICAgcnBtOwogICAgYXBwbGljYXRpb24veC1zZWEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlYTsKICAgIGFwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoICAgICAgICAgICAgICAgICAgICBzd2Y7CiAgICBhcHBsaWNhdGlvbi94LXN0dWZmaXQgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l0OwogICAgYXBwbGljYXRpb24veC10Y2wgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRjbCB0azsKICAgIGFwcGxpY2F0aW9uL3gteDUwOS1jYS1jZXJ0ICAgICAgICAgICAgICAgICAgICAgICBkZXIgcGVtIGNydDsKICAgIGFwcGxpY2F0aW9uL3gteHBpbnN0YWxsICAgICAgICAgICAgICAgICAgICAgICAgICB4cGk7CiAgICBhcHBsaWNhdGlvbi94aHRtbCt4bWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgeGh0bWw7CiAgICBhcHBsaWNhdGlvbi94c3BmK3htbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeHNwZjsKICAgIGFwcGxpY2F0aW9uL3ppcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6aXA7CgogICAgYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtICAgICAgICAgICAgICAgICAgICAgICAgIGJpbiBleGUgZGxsOwogICAgYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtICAgICAgICAgICAgICAgICAgICAgICAgIGRlYjsKICAgIGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSAgICAgICAgICAgICAgICAgICAgICAgICBkbWc7CiAgICBhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0gICAgICAgICAgICAgICAgICAgICAgICAgaXNvIGltZzsKICAgIGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSAgICAgICAgICAgICAgICAgICAgICAgICBtc2kgbXNwIG1zbTsKCiAgICBhdWRpby9taWRpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWlkIG1pZGkga2FyOwogICAgYXVkaW8vbXBlZyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1wMzsKICAgIGF1ZGlvL29nZyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZ2c7CiAgICBhdWRpby94LW00YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbTRhOwogICAgYXVkaW8veC1yZWFsYXVkaW8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhOwoKICAgIHZpZGVvLzNncHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzZ3BwIDNncDsKICAgIHZpZGVvL21wMnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0czsKICAgIHZpZGVvL21wNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtcDQ7CiAgICB2aWRlby9tcGVnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXBlZyBtcGc7CiAgICB2aWRlby9xdWlja3RpbWUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW92OwogICAgdmlkZW8vd2VibSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlYm07CiAgICB2aWRlby94LWZsdiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmx2OwogICAgdmlkZW8veC1tNHYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG00djsKICAgIHZpZGVvL3gtbW5nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtbmc7CiAgICB2aWRlby94LW1zLWFzZiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXN4IGFzZjsKICAgIHZpZGVvL3gtbXMtd212ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3bXY7CiAgICB2aWRlby94LW1zdmlkZW8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZpOwp9Cg==\",\n                    \"mtime\": \"0001-01-01T00:00:00Z\",\n                    \"name\": \"mime.types\",\n                    \"size\": 5290\n                },\n                {\n                    \"contents\": \"CgpldmVudHMgewogICAgd29ya2VyX2Nvbm5lY3Rpb25zIDUxMjsKfQoKaHR0cCB7CiAgICBpbmNsdWRlICAgICAgIC9ldGMvbmdpbngvbWltZS50eXBlczsKCiAgICBkZWZhdWx0X3R5cGUgIGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTsKCiAgICBsb2dfZm9ybWF0ICBtYWluICAnJHJlbW90ZV9hZGRyIC0gJHJlbW90ZV91c2VyIFskdGltZV9sb2NhbF0gIiRyZXF1ZXN0IiAnCiAgICAgICAgICAgICAgICAgICckc3RhdHVzICRib2R5X2J5dGVzX3NlbnQgIiRodHRwX3JlZmVyZXIiICcKICAgICAgICAgICAgICAgICAgJyIkaHR0cF91c2VyX2FnZW50IiAiJGh0dHBfeF9mb3J3YXJkZWRfZm9yIiAnCiAgICAgICAgICAgICAgICAgICciJGJ5dGVzX3NlbnQiICIkcmVxdWVzdF9sZW5ndGgiICIkcmVxdWVzdF90aW1lIiAnCiAgICAgICAgICAgICAgICAgICciJGd6aXBfcmF0aW8iICRzZXJ2ZXJfcHJvdG9jb2wgJzsKCiAgICBhY2Nlc3NfbG9nICAvdmFyL2xvZy9uZ2lueC9hY2Nlc3MubG9nICBtYWluOwoKICAgIHNlbmRmaWxlICAgICAgICBvZmY7CgogICAga2VlcGFsaXZlX3RpbWVvdXQgIDY1OwoKICAgIHByb3h5X2NhY2hlX3BhdGggL2RhdGEvbmdpbngvY2FjaGVfYmFja2VuZDEga2V5c196b25lPWNhY2hlX2JhY2tlbmQxOjEwbTsKICAgIHByb3h5X2NhY2hlX3BhdGggL2RhdGEvbmdpbngvY2FjaGVfYmFja2VuZDIga2V5c196b25lPWNhY2hlX2JhY2tlbmQyOjEwbTsKICAgIAogICAgcHJveHlfYnVmZmVyaW5nIG9mZjsKIAogICAgI2d6aXAgb247CgogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSBhcGkKICAgICAgICBsaXN0ZW4gMTI3LjAuMC4xOjgwODA7CiAgICAgICAgbG9jYXRpb24gL2FwaSB7CiAgICAgICAgICAgIGFwaSB3cml0ZT1vbjsKICAgICAgICAgICAgYWxsb3cgMTI3LjAuMC4xOwogICAgICAgICAgICBkZW55IGFsbDsKICAgICAgICB9CiAgICB9CgogICAgc2VydmVyIHsKICAgICAgICBsaXN0ZW4gNDQzIHNzbDsKICAgICAgICBzc2xfcHJvdG9jb2xzIFRMU3YxLjEgVExTdjEuMiBUTFN2MS4zOwogICAgICAgIHNzbF9jaXBoZXJzICFOVUxMOiFMT1c6IUVYUE9SVDozREVTOiFNRDU6IWFOVUxMOiFlTlVMTDohQURIOkhJR0g7ICAgICAgICAKICAgICAgICBzc2xfY2VydGlmaWNhdGUgL2V0Yy9uZ2lueC9zc2wvY2VydC0yOS1kYXlzLmNydDsKICAgICAgICBzc2xfY2VydGlmaWNhdGVfa2V5IC9ldGMvbmdpbngvc3NsL2NlcnQtMjktZGF5cy5rZXk7CQogICAgfQoKICAgIHNlcnZlciB7CiAgICAgICAgc2VydmVyX25hbWUgc2VydmVyMgogICAgICAgIGxpc3RlbiA4NDQzIHNzbCBkZWZhdWx0X3NlcnZlcjsKICAgICAgICBzc2xfcHJvdG9jb2xzIFRMU1YxLjEgVExTdjEuMiBUTFN2MS4zOwogICAgICAgIHNzbF9jaXBoZXJzIEFMTDohTlVMTDohTE9XOiFFWFBPUlQ6IU1ENTohYU5VTEw6IWVOVUxMOiFBREg6SElHSDsgICAgICAgIAogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZSAvZXRjL25naW54L3NzbC9leHBpcmVkLmNydDsKICAgICAgICBzc2xfY2VydGlmaWNhdGVfa2V5IC9ldGMvbmdpbngvc3NsL2V4cGlyZWQua2V5OwkKICAgIH0KCiAgICBzZXJ2ZXIgewogICAgICAgIHNlcnZlcl9uYW1lIHNlcnZlcjMKICAgICAgICBsaXN0ZW4gODQzOCBzc2w7CiAgICAgICAgc3NsX3Byb3RvY29scyBUTFN2MS4yIFRMU3YxLjM7CiAgICAgICAgc3NsX2NpcGhlcnMgSElHSDsgICAgICAgIAogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZSAvZXRjL25naW54L3NzbC9jZXJ0LTMwMC1kYXlzLmNydDsKICAgICAgICBzc2xfY2VydGlmaWNhdGVfa2V5IC9ldGMvbmdpbngvc3NsL2NlcnQtMzAwLWRheXMua2V5OwkKICAgIH0KCiAgICBzZXJ2ZXIgewogICAgICAgIHNlcnZlcl9uYW1lIG15X3NlcnZlcjsKICAgICAgICBsaXN0ZW4gOTA5MSBkZWZhdWx0X3NlcnZlcjsKICAgICAgICByZXR1cm4gMjAwICJHcmVldGluZ3MuIGhlbGxvIGZyb20gaHR0cCB3b3JrbG9hZCAxIFxuIjsKICAgIH0gICAgIAogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSA5MDkzCiAgICAgICAgbGlzdGVuIDkwOTIgZGVmYXVsdF9zZXJ2ZXI7CiAgICAgICAgcmV0dXJuIDIwMCAiaGVsbG8gZnJvbSBodHRwIHdvcmtsb2FkIDIgXG4iOwogICAgfQogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSA5MDkzCiAgICAgICAgbGlzdGVuIDkwOTMgZGVmYXVsdF9zZXJ2ZXI7CiAgICAgICAgcmV0dXJuIDIwMCAiaGVsbG8gZnJvbSBzdHJlYW0gd29ya2xvYWQgMSBcbiI7CiAgICB9CiAKICAgIHVwc3RyZWFtIG5naW54MSB7CiAgICAgICAgc2VydmVyIDEyNy4wLjAuMTo5MDkxOwogICAgICAgIHpvbmUgbXlfYmFja2VuZDEgMTAwMDAwMDsKICAgICAgICBrZWVwYWxpdmUgMzI7CiAgICAgICAgcXVldWUgMTA7CiAgICB9CiAgICB1cHN0cmVhbSBuZ2lueDIgewogICAgICAgIHNlcnZlciAxMjcuMC4wLjE6OTA5MjsKICAgICAgICB6b25lIG15X2JhY2tlbmQyIDEwMDAwMDA7CiAgICAgICAga2VlcGFsaXZlIDMyOwogICAgICAgIHF1ZXVlIDIwOwogICAgfQogCiAgICBzZXJ2ZXIgewogICAgICAgIHNlcnZlcl9uYW1lIHNlcnZlcjk5OwogICAgICAgIHN0YXR1c196b25lIG15X2Zyb250ZW5kMTsKICAgICAgICBsaXN0ZW4gMTI3LjAuMC4xOjgwODEgZGVmYXVsdF9zZXJ2ZXI7CiAgICAgICAgbG9jYXRpb24gL2Zyb250ZW5kMSB7CiAgICAgICAgICAgIHByb3h5X3Bhc3MgaHR0cDovL25naW54MTsKICAgICAgICAgICAgcHJveHlfc2V0X2hlYWRlciBIb3N0ICRob3N0OwogICAgICAgICAgICBwcm94eV9jYWNoZSBjYWNoZV9iYWNrZW5kMTsKICAgICAgICAgICAgc3RhdHVzX3pvbmUgbXlfbG9jYXRpb25fem9uZTsKCiAgICAgICAgfQogICAgfQogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSBzZXJ2ZXI3OwogICAgICAgIHN0YXR1c196b25lIG15X2Zyb250ZW5kMjsKICAgICAgICBsaXN0ZW4gMTI3LjAuMC4xOjgwODIgZGVmYXVsdF9zZXJ2ZXI7CiAgICAgICAgbG9jYXRpb24gL2Zyb250ZW5kMiB7CiAgICAgICAgICAgIHByb3h5X3Bhc3MgaHR0cDovL25naW54MjsKICAgICAgICAgICAgcHJveHlfc2V0X2hlYWRlciBIb3N0ICRob3N0OwogICAgICAgICAgICBwcm94eV9jYWNoZSBjYWNoZV9iYWNrZW5kMjsKICAgICAgICAgICAgc3RhdHVzX3pvbmUgbXlfbG9jYXRpb25fem9uZTsKCiAgICAgICAgfQogICAgfQogICAgc2VydmVyIHsKICAgICAgIGxpc3RlbiAxMjcuMC4wLjE6ODAgZGVmYXVsdF9zZXJ2ZXI7CiAgICAgICBzZXJ2ZXJfbmFtZSAxMjcuMC4wLjE7CiAgICAgICBsb2NhdGlvbiAvbmdpbnhfc3RhdHVzIHsKICAgICAgICAgIHN0dWJfc3RhdHVzIG9uOwogICAgICAgICAgYWxsb3cgMTI3LjAuMC4xOwogICAgICAgICAgZGVueSBhbGw7CiAgICAgICB9CiAgICAKICAgICAgICBsb2NhdGlvbiAvYXBpIHsKICAgICAgICAgICAgYXBpIHdyaXRlPW9uOwogICAgICAgICAgICBhbGxvdyAxMjcuMC4wLjE7CiAgICAgICAgICAgIGRlbnkgIGFsbDsKICAgICAgICB9CiAgICB9CiAgIAogICAgaW5jbHVkZSAvZXRjL25naW54L2NvbmYuZC8qLmNvbmY7Cn0KCnN0cmVhbSB7CgogICAgdXBzdHJlYW0gbmdpbngzIHsKICAgICAgICB6b25lIG15X3N0cmVhbV9iYWNrZW5kIDY0azsKICAgICAgICBzZXJ2ZXIgMTI3LjAuMC4xOjkwOTM7CiAgICB9CiAKICAgIGxvZ19mb3JtYXQgYmFzaWMgJyRyZW1vdGVfYWRkciBbJHRpbWVfbG9jYWxdICcKICAgICAgICAgICAgICAgICAgICAgJyRwcm90b2NvbCAkc3RhdHVzICRieXRlc19zZW50ICRieXRlc19yZWNlaXZlZCAnCiAgICAgICAgICAgICAgICAgICAgICckc2Vzc2lvbl90aW1lJzsKICAgIGFjY2Vzc19sb2cgL3Zhci9sb2cvbmdpbngvYWNjZXNzLmxvZyBiYXNpYzsKIAogICAgc2VydmVyIHsKICAgICAgICBsaXN0ZW4gODA4MzsKICAgICAgICBzdGF0dXNfem9uZSB0Y3Bfc3RyZWFtX3NlcnZlcjsKICAgICAgICBwcm94eV9wYXNzIG5naW54MzsKICAgIH0KfQo\",\n                    \"mtime\": \"0001-01-01T00:00:00Z\",\n                    \"name\": \"nginx.conf\",\n                    \"size\": 4092\n                }\n            ],\n            \"name\": \"/etc/nginx\"\n        },\n        {\n            \"files\": [\n                {\n                    \"contents\": \"c2VydmVyIHsKICAgIGxpc3RlbiAgICAgICA4MCBkZWZhdWx0X3NlcnZlcjsKICAgIHNlcnZlcl9uYW1lICBsb2NhbGhvc3Q7CgoKICAgIGV4cGlyZXMgLTE7CgogICAgI2FwcF9wcm90ZWN0X2VuYWJsZSBvbjsKCiAgICBzdWJfZmlsdGVyX29uY2Ugb2ZmOwogICAgc3ViX2ZpbHRlciAnc2VydmVyX2hvc3RuYW1lJyAnJGhvc3RuYW1lJzsKICAgIHN1Yl9maWx0ZXIgJ3NlcnZlcl9hZGRyZXNzJyAgJyRzZXJ2ZXJfYWRkcjokc2VydmVyX3BvcnQnOwogICAgc3ViX2ZpbHRlciAnc2VydmVyX3VybCcgICAgICAnJHJlcXVlc3RfdXJpJzsKICAgIHN1Yl9maWx0ZXIgJ3JlbW90ZV9hZGRyJyAgICAgJyRyZW1vdGVfYWRkcjokcmVtb3RlX3BvcnQnOwogICAgc3ViX2ZpbHRlciAnc2VydmVyX2RhdGUnICAgICAnJHRpbWVfbG9jYWwnOwogICAgc3ViX2ZpbHRlciAnY2xpZW50X2Jyb3dzZXInICAnJGh0dHBfdXNlcl9hZ2VudCc7CiAgICBzdWJfZmlsdGVyICdyZXF1ZXN0X2lkJyAgICAgICckcmVxdWVzdF9pZCc7CiAgICBzdWJfZmlsdGVyICduZ2lueF92ZXJzaW9uJyAgICckbmdpbnhfdmVyc2lvbic7CiAgICBzdWJfZmlsdGVyICdkb2N1bWVudF9yb290JyAgICckZG9jdW1lbnRfcm9vdCc7CiAgICBzdWJfZmlsdGVyICdwcm94aWVkX2Zvcl9pcCcgICckaHR0cF94X2ZvcndhcmRlZF9mb3InOwoKICAgIGxvY2F0aW9uIC8gewogICAgICAgIHJvb3QgICAvdXNyL3NoYXJlL25naW54L2h0bWw7CiAgICAgICAgaW5kZXggIGRlbW9faW5kZXguaHRtbCBpbmRleC5odG1sIGluZGV4Lmh0bTsKICAgIH0KCiAgICBlcnJvcl9wYWdlICAgNTAwIDUwMiA1MDMgNTA0ICAvNTB4Lmh0bWw7CiAgICBsb2NhdGlvbiA9IC81MHguaHRtbCB7CiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsKICAgIH0KfQoKc2VydmVyIHsKICAgICNsaXN0ZW4gNDQzMzsKICAgIGxpc3RlbiA0NDMzIHNzbDsKICAgIHNzbF9wcm90b2NvbHMgVExTdjEuMSBUTFN2MS4yIFRMU3YxLjM7CiAgICBzc2xfY2lwaGVycyBBTEw6IU5VTEw6IUxPVzohRVhQT1JUOiFNRDU6M0RFUzohYU5VTEw6IWVOVUxMOiFBREg6SElHSDsgICAgICAgIAogICAgc3NsX2NlcnRpZmljYXRlIC9ldGMvbmdpbngvc3NsL2V4cGlyZWQuY3J0OwogICAgc3NsX2NlcnRpZmljYXRlX2tleSAvZXRjL25naW54L3NzbC9leHBpcmVkLmtleTsJCn0=\",\n                    \"mtime\": \"0001-01-01T00:00:00Z\",\n                    \"name\": \"default.conf\",\n                    \"size\": 1184\n                }\n            ],\n            \"name\": \"/etc/nginx/conf.d\"\n        }\n    ],\n    \"object_id\": \"nc_AQ0bn0aYSVuWj9JVl1wnuA\",\n    \"payloads\": [\n        {\n            \"object_id\": \"cert_3R_rR02OSs6B1chQB4kuqg\",\n            \"paths\": [\n                \"/etc/nginx/ssl/cert-300-days.crt\"\n            ],\n            \"type\": \"unmanaged_certificate\"\n        },\n        {\n            \"object_id\": \"cert_ihrDMUWwTPO-WbveIq6EvA\",\n            \"paths\": [\n                \"/etc/nginx/ssl/expired.crt\"\n            ],\n            \"type\": \"unmanaged_certificate\"\n        },\n        {\n            \"object_id\": \"cert_RUKFxEp-SySP1KeOC1-N_w\",\n            \"paths\": [\n                \"/etc/nginx/ssl/cert-45-days.crt\"\n            ],\n            \"type\": \"unmanaged_certificate\"\n        },\n        {\n            \"object_id\": \"cert_jqEWDxDZS7mSmFmlvljM_A\",\n            \"paths\": [\n                \"/etc/nginx/ssl/cert-30-days.crt\"\n            ],\n            \"type\": \"unmanaged_certificate\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instances/{{instance_id}}/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												"{{instance_id}}",
												"config"
											]
										},
										"description": "Publishes a new or updated NGINX configuration to the specified instance. \nIf no existing configuration is found, a new one is created; otherwise, the current configuration is overwritten. \nBefore publishing, use the `PUT /instances/{instanceObjectID}/config-report` endpoint to generate an analysis report for the provided configuration.\n"
									},
									"response": [
										{
											"name": "The request to publish the configuration has been accepted and is being processed. To check the publication status, make a GET request to /instances/{instanceObjectID}/publications.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/PublicationInstance not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Request cannot be processed due to invalid input or parameters. Verify the request format and provided data.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Access denied.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								},
								{
									"name": "Apply partial updates to an instance's configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    var pi = jsonData.object_id;\r",
													"    console.log(\"publication id: \" + pi);\r",
													"    pm.collectionVariables.set(\"publication_id\", pi);\r",
													"    var hh = pm.collectionVariables.get(\"publication_id\");\r",
													"    console.log(\"publication id as set in the collection variables: \" + hh);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"conf_path\": \"/etc/nginx/nginx.conf\",\n    \"configs\": [\n        {\n            \"files\": [\n                {\n                    \"contents\": \"{{nginx_conf_base64}}\",\n                    \"mtime\": \"0001-01-01T00:00:00Z\",\n                    \"name\": \"nginx.conf\",\n                    \"size\": 4092\n                }\n            ],\n            \"name\": \"/etc/nginx\"\n        }\n    ],\n    \"object_id\": \"nc_AQ0bn0aYSVuWj9JVl1wnuA\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instances/{{instance_id}}/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												"{{instance_id}}",
												"config"
											]
										},
										"description": "Applies the specified partial updates to an existing NGINX configuration. \nThis endpoint accepts additive updates to `NginxConfig`. \nTo delete files, omit the `file.contents` field. \nThis method compares the provided config_version with the current NGINX instance configuration to detect conflicts, which may arise if the config_version does not match due to an out-of-band update. \nBefore publishing, use the `PATCH /instances/{instanceObjectID}/config-report` endpoint to generate an analysis report for the modified configuration.\n"
									},
									"response": [
										{
											"name": "The request to publish the configuration has been accepted and is being processed. To check the publication status, make a GET request to /instances/{instanceObjectID}/publications.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/PublicationInstance not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Request cannot be processed due to invalid input or parameters. Verify the request format and provided data.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "Access denied.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"config"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "configs",
							"item": [
								{
									"name": "{instanceConfigurationObjectID}",
									"item": [
										{
											"name": "Retrieve an instance's configuration details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/configs/:instanceConfigurationObjectID",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"configs",
														":instanceConfigurationObjectID"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														},
														{
															"key": "instanceConfigurationObjectID"
														}
													]
												},
												"description": "Returns the configuration details for an NGINX instance, including: \n* Main configuration path\n* Details about configuration files\n* Details about auxiliary files\n* Unique identifiers\n"
											},
											"response": [
												{
													"name": "Successfully retrieved the configuration details for the specified NGINX instance and NGINX configuration.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/instances/:instanceObjectID/configs/:instanceConfigurationObjectID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"instances",
																":instanceObjectID",
																"configs",
																":instanceConfigurationObjectID"
															],
															"variable": [
																{
																	"key": "instanceObjectID"
																},
																{
																	"key": "instanceConfigurationObjectID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfig not found in the OpenAPI spec\"\n}"
												},
												{
													"name": "Access denied.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/instances/:instanceObjectID/configs/:instanceConfigurationObjectID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"instances",
																":instanceObjectID",
																"configs",
																":instanceConfigurationObjectID"
															],
															"variable": [
																{
																	"key": "instanceObjectID"
																},
																{
																	"key": "instanceConfigurationObjectID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
												},
												{
													"name": "The NGINX instance or NGINX configuration with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/instances/:instanceObjectID/configs/:instanceConfigurationObjectID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"instances",
																":instanceObjectID",
																"configs",
																":instanceConfigurationObjectID"
															],
															"variable": [
																{
																	"key": "instanceObjectID"
																},
																{
																	"key": "instanceConfigurationObjectID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
												},
												{
													"name": "An unexpected error occurred on the server. Please try the request again later.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/instances/:instanceObjectID/configs/:instanceConfigurationObjectID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"instances",
																":instanceObjectID",
																"configs",
																":instanceConfigurationObjectID"
															],
															"variable": [
																{
																	"key": "instanceObjectID"
																},
																{
																	"key": "instanceConfigurationObjectID"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieves the stored NGINX configurations for an instance",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID/configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID",
												"configs"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										},
										"description": "Returns a list of all configurations for a NGINX instance. Only the last 5 are kept on the NGINX One Console for a NGINX instance."
									},
									"response": [
										{
											"name": "Successfully retrieved the list of NGINX configurations for the specified NGINX instance.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"configs"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfigMeta not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference ../../common.yaml#/components/schemas/NginxConfigMeta not found in the OpenAPI spec\"\n  }\n]"
										},
										{
											"name": "Access denied.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"configs"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"configs"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"configs"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "publications",
							"item": [
								{
									"name": "{publicationObjectID}",
									"item": [
										{
											"name": "Retrieve a publication for an NGINX instance.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"console.log(\"Checking publication id: \" + pm.collectionVariables.get(\"publication_id\"));\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/{{instance_id}}/publications/{{publication_id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														"{{instance_id}}",
														"publications",
														"{{publication_id}}"
													]
												},
												"description": "Returns a specific publication for an NGINX instance. Only 5 previous entries of Publication are kept for each NGINX instance."
											},
											"response": [
												{
													"name": "Successfully retrieved the specific Publication for the specified NGINX instance.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/instances/:instanceObjectID/publications/:publicationObjectID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"instances",
																":instanceObjectID",
																"publications",
																":publicationObjectID"
															],
															"variable": [
																{
																	"key": "instanceObjectID"
																},
																{
																	"key": "publicationObjectID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/PublicationInstance not found in the OpenAPI spec\"\n}"
												},
												{
													"name": "Access denied.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/instances/:instanceObjectID/publications/:publicationObjectID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"instances",
																":instanceObjectID",
																"publications",
																":publicationObjectID"
															],
															"variable": [
																{
																	"key": "instanceObjectID"
																},
																{
																	"key": "publicationObjectID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
												},
												{
													"name": "The NGINX instance or Publication with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/instances/:instanceObjectID/publications/:publicationObjectID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"instances",
																":instanceObjectID",
																"publications",
																":publicationObjectID"
															],
															"variable": [
																{
																	"key": "instanceObjectID"
																},
																{
																	"key": "publicationObjectID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
												},
												{
													"name": "An unexpected error occurred on the server. Please try the request again later.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/instances/:instanceObjectID/publications/:publicationObjectID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"instances",
																":instanceObjectID",
																"publications",
																":publicationObjectID"
															],
															"variable": [
																{
																	"key": "instanceObjectID"
																},
																{
																	"key": "publicationObjectID"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the publications for an instance",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID/publications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID",
												"publications"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										},
										"description": "Returns a list of all publications for a NGINX instance."
									},
									"response": [
										{
											"name": "Successfully retrieved the list of all publications for the specified NGINX instance.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/publications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"publications"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"value\": \"reference ../../common.yaml#/components/schemas/PublicationInstance not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference ../../common.yaml#/components/schemas/PublicationInstance not found in the OpenAPI spec\"\n  }\n]"
										},
										{
											"name": "Access denied.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/publications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"publications"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										},
										{
											"name": "An unexpected error occurred on the server. Please try the request again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/instances/:instanceObjectID/publications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"instances",
														":instanceObjectID",
														"publications"
													],
													"variable": [
														{
															"key": "instanceObjectID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve an instance",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/{{instance_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										"{{instance_id}}"
									]
								},
								"description": "Retrieves the details for an NGINX instance, including\n* Hostname\n* System status\n* Timestamps of key actions (registration, last reported, etc.)\n* NGINX build information\n* Certificate data\n* Operating system version\n* NGINX Agent version\n"
							},
							"response": [
								{
									"name": "Successfully retrieved the details of the NGINX instance.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/InstanceDetails not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Access denied.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "An unexpected error occurred on the server. Please try the request again later.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						},
						{
							"name": "Delete an instance",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances/:instanceObjectID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances",
										":instanceObjectID"
									],
									"variable": [
										{
											"key": "instanceObjectID"
										}
									]
								},
								"description": "Deletes an NGINX instance. Associations with certificates will be cleaned up.\n"
							},
							"response": [
								{
									"name": "Successfully deleted the NGINX instance.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access denied.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "The NGINX instance with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "An unexpected error occurred on the server. Please try the request again later.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/instances/:instanceObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instances",
												":instanceObjectID"
											],
											"variable": [
												{
													"key": "instanceObjectID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List all instances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}{{fqdn}}/api/nginx/one/namespaces/default/instances?paginated=false",
							"host": [
								"{{protocol}}{{fqdn}}"
							],
							"path": [
								"api",
								"nginx",
								"one",
								"namespaces",
								"default",
								"instances"
							],
							"query": [
								{
									"key": "paginated",
									"value": "false"
								}
							]
						},
						"description": "Returns a list of all NGINX instances, providing details such as:\n  * Unique identifiers for each instance\n  * Timestamps for key actions (like registration and last report)\n  * Information about the NGINX build\n  * Version of the NGINX Agent\n"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of instances.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/InstanceListResponse not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "Access denied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "An unexpected error occurred on the server. Please try the request again later.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				},
				{
					"name": "List Online Instances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}{{fqdn}}/api/nginx/one/namespaces/default/instances?filter_fields=instance_status&filter_ops=IN&filter_values=online&paginated=false",
							"host": [
								"{{protocol}}{{fqdn}}"
							],
							"path": [
								"api",
								"nginx",
								"one",
								"namespaces",
								"default",
								"instances"
							],
							"query": [
								{
									"key": "filter_fields",
									"value": "instance_status"
								},
								{
									"key": "filter_ops",
									"value": "IN"
								},
								{
									"key": "filter_values",
									"value": "online"
								},
								{
									"key": "paginated",
									"value": "false"
								}
							]
						},
						"description": "Returns a list of all NGINX instances, providing details such as:\n  * Unique identifiers for each instance\n  * Timestamps for key actions (like registration and last report)\n  * Information about the NGINX build\n  * Version of the NGINX Agent\n"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of instances.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/InstanceListResponse not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "Access denied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "An unexpected error occurred on the server. Please try the request again later.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instances"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "features",
			"item": [
				{
					"name": "List all enabled feature flags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/features",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"features"
							]
						},
						"description": "Returns a list of all the enabled feature flags in the NGINX One console."
					},
					"response": [
						{
							"name": "Successfully retrieved the list of enabled feature flags.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/features",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"features"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"value\": \"reference ../../common.yaml#/components/schemas/FeatureFlagKey not found in the OpenAPI spec\"\n  },\n  {\n    \"value\": \"reference ../../common.yaml#/components/schemas/FeatureFlagKey not found in the OpenAPI spec\"\n  }\n]"
						},
						{
							"name": "Access denied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/features",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"features"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "An unexpected error occurred on the server. Please try the request again later.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/features",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"features"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "clusters",
			"item": [
				{
					"name": "{clusterObjectID}",
					"item": [
						{
							"name": "Retrieve an cluster",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters/:clusterObjectID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters",
										":clusterObjectID"
									],
									"variable": [
										{
											"key": "clusterObjectID"
										}
									]
								},
								"description": "Retrieve the details for an NGINX cluster, including\n* name\n* Instances and details of each instance\n* Timestamp of last reported action\n* NGINX config version on the cluster\n* Certificate summary referenced by cluster members\n* NGINX config sync operation status\n* Last cluster publication operation status\n"
							},
							"response": [
								{
									"name": "Successfully retrieved the details of the NGINX cluster.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterObjectID"
											],
											"variable": [
												{
													"key": "clusterObjectID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/ClusterDetails not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Access denied.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterObjectID"
											],
											"variable": [
												{
													"key": "clusterObjectID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "The NGINX cluster with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clusters/:clusterObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clusters",
												":clusterObjectID"
											],
											"variable": [
												{
													"key": "clusterObjectID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create a Nginx cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/ClusterCreateRequest not found in the OpenAPI spec\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clusters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusters"
							]
						},
						"description": "Create a NGINX cluster with a name that can be uniquely identify cluster in the tenant namespace.\n"
					},
					"response": [
						{
							"name": "Successfully created NGINX cluster.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/ClusterCreateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/ClusterCreateResponse not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "Access denied.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/ClusterCreateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "An unexpected error occurred on the server. Please try the request again later.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/ClusterCreateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				},
				{
					"name": "List all clusters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clusters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusters"
							]
						},
						"description": "Returns a list of all NGINX clusters, providing details such as:\n  * Name of the cluster\n  * List of instance with details\n  * Version of the NGINX configuration that's expected to be on all listed instances\n  * Status of apply configuration operation  \n  * Timestamp of last reported action\n"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of NGINX clusters.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/ClusterListResponse not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "Access denied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "An unexpected error occurred on the server. Please try the request again later.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusters"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "certificates",
			"item": [
				{
					"name": "parse",
					"item": [
						{
							"name": "Parse a SSL certificate and validate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates/parse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates",
										"parse"
									]
								},
								"description": "Parses and validates a SSL certificate. This parses the provided PEM files, validates that the public certificates \nare in a valid X.509 format. An error response will be returned if the SSL certificate is not parsable.\nIf the provided key doesn't match with the leaf certificate, the metadata will still be parsed and displayed in the\nresponse with 200 OK status, including a validation status that indicates the SSL certificate is unauthenticated.\n"
							},
							"response": [
								{
									"name": "Successfully parsed and validated the SSL certificate.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/parse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												"parse"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateResponse not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Request cannot be processed due to invalid input or parameters. Verify the request format and provided data.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/parse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												"parse"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Access denied.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/parse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												"parse"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "An unexpected error occurred on the server. Please try the request again later.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/parse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												"parse"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{certificateObjectID}",
					"item": [
						{
							"name": "Retrieve a SSL certificate",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates/:certificateObjectID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates",
										":certificateObjectID"
									],
									"variable": [
										{
											"key": "certificateObjectID"
										}
									]
								},
								"description": "Retrieves the details for a SSL certificate, including\n* Certificate Name\n* Type of the SSL certificate, indicating whether it is managed or unmanaged by NGINX One Console\n* Certificate issuer for the leaf certificate or the first certificate in a CA bundle\n* Certificate subject for the leaf certificate or the first certificate in a CA bundle\n* Combined validity period for multiple certificates\n* Metadata for each certificate\n* Metadata for private key if provided\n"
							},
							"response": [
								{
									"name": "Successfully retrieved the details of the SSL certificate.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateResponse not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Access denied.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "The SSL certificate with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "An unexpected error occurred on the server. Please try the request again later.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						},
						{
							"name": "Update a SSL certificate",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates/:certificateObjectID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates",
										":certificateObjectID"
									],
									"variable": [
										{
											"key": "certificateObjectID"
										}
									]
								},
								"description": "Updates both public certificates and key, or only updates either of them.\nAdditionally, this can be used to update a CA bundle.\n"
							},
							"response": [
								{
									"name": "Successfully updated the specified SSL certificate.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateResponse not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Request cannot be processed due to invalid input or parameters. Verify the request format and provided data.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "Access denied.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "The SSL certificate with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "An unexpected error occurred on the server. Please try the request again later.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						},
						{
							"name": "Delete a SSL certificate",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates/:certificateObjectID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates",
										":certificateObjectID"
									],
									"variable": [
										{
											"key": "certificateObjectID"
										}
									]
								},
								"description": "Deletes a SSL certificate."
							},
							"response": [
								{
									"name": "Successfully deleted the SSL certificate.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access denied.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "The SSL certificate with the specified object_id was not found. Check that the object_id provided is correct and corresponds to an existing resource.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								},
								{
									"name": "An unexpected error occurred on the server. Please try the request again later.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certificates/:certificateObjectID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificates",
												":certificateObjectID"
											],
											"variable": [
												{
													"key": "certificateObjectID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Paginated list of all SSL certificates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/certificates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificates"
							]
						},
						"description": "Returns a paginated list of metadata for all the SSL certificates.\n"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of SSL certificates.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateListResponse not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "Access denied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "An unexpected error occurred on the server. Please try the request again later.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				},
				{
					"name": "Create a SSL certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/certificates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificates"
							]
						},
						"description": "Creates a SSL certificate with an optional name.\n"
					},
					"response": [
						{
							"name": "Successfully created SSL certificate.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateResponse not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "Request cannot be processed due to invalid input or parameters. Verify the request format and provided data.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "Access denied.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "An unexpected error occurred on the server. Please try the request again later.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CertificateRequest not found in the OpenAPI spec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "cves",
			"item": [
				{
					"name": "List of all CVEs affecting the instances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cves",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cves"
							]
						},
						"description": "Returns a list of all CVEs that affect at least one instance under the tenant\n"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of CVEs.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cves"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/CVEListResponse not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "Access denied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cves"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						},
						{
							"name": "An unexpected error occurred on the server. Please try the request again later.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cves"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference ../../common.yaml#/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "dataplane_keys",
			"item": [
				{
					"name": "Get Keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API Token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{fqdn}}/api/web/namespaces",
							"protocol": "https",
							"host": [
								"{{fqdn}}"
							],
							"path": [
								"api",
								"web",
								"namespaces"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Initial Token Authorization",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "APIToken {{APIToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "namespace",
			"value": "default"
		},
		{
			"key": "publication_id",
			"value": "ddd"
		},
		{
			"key": "api_base_path",
			"value": "/api/nginx/one/namespaces/{{namespace}}"
		},
		{
			"key": "APIToken",
			"value": "YOUR_XC_API_BEARER_TOKEN_HERE"
		},
		{
			"key": "fqdn",
			"value": "nginxone-team.staging.volterra.us",
			"type": "string"
		},
		{
			"key": "protocol",
			"value": "https://",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "{{protocol}}{{fqdn}}{{api_base_path}}",
			"type": "string"
		},
		{
			"key": "instance_id",
			"value": "inst__xxxxxxx",
			"type": "string"
		},
		{
			"key": "nginx_conf_base64_problems",
			"value": "IyBtb2RpZmllZCBieSBBUEkgdG8gTjEgdXNpbmcgUG9zdG1hbgp1c2VyICBuZ2lueDsKd29ya2VyX3Byb2Nlc3NlcyAgYXV0bzsKCmVycm9yX2xvZyAgL3Zhci9sb2cvbmdpbngvZXJyb3IubG9nIG5vdGljZTsKI3BpZCAgICAgICAgL3Zhci9ydW4vbmdpbngucGlkOwoKIyBpcyB0aGlzIGVub3VnaCBjb25uZWN0aW9ucz8KCmV2ZW50cyB7CiAgICB3b3JrZXJfY29ubmVjdGlvbnMgNTEyOwp9CgpodHRwIHsKICAgIGluY2x1ZGUgICAgICAgL2V0Yy9uZ2lueC9taW1lLnR5cGVzOwoKICAgIGRlZmF1bHRfdHlwZSAgYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtOwoKICAgIGxvZ19mb3JtYXQgIG1haW4gICckcmVtb3RlX2FkZHIgLSAkcmVtb3RlX3VzZXIgWyR0aW1lX2xvY2FsXSAiJHJlcXVlc3QiICcKICAgICAgICAgICAgICAgICAgJyRzdGF0dXMgJGJvZHlfYnl0ZXNfc2VudCAiJGh0dHBfcmVmZXJlciIgJwogICAgICAgICAgICAgICAgICAnIiRodHRwX3VzZXJfYWdlbnQiICIkaHR0cF94X2ZvcndhcmRlZF9mb3IiICcKICAgICAgICAgICAgICAgICAgJyIkYnl0ZXNfc2VudCIgIiRyZXF1ZXN0X2xlbmd0aCIgIiRyZXF1ZXN0X3RpbWUiICcKICAgICAgICAgICAgICAgICAgJyIkZ3ppcF9yYXRpbyIgJHNlcnZlcl9wcm90b2NvbCAnOwoKICAgIGFjY2Vzc19sb2cgIC92YXIvbG9nL25naW54L2FjY2Vzcy5sb2cgIG1haW47CgogICAgc2VuZGZpbGUgICAgICAgIG9mZjsKCiAgICBrZWVwYWxpdmVfdGltZW91dCAgNjU7CgogICAgcHJveHlfY2FjaGVfcGF0aCAvZGF0YS9uZ2lueC9jYWNoZV9iYWNrZW5kMSBrZXlzX3pvbmU9Y2FjaGVfYmFja2VuZDE6MTBtOwogICAgcHJveHlfY2FjaGVfcGF0aCAvZGF0YS9uZ2lueC9jYWNoZV9iYWNrZW5kMiBrZXlzX3pvbmU9Y2FjaGVfYmFja2VuZDI6MTBtOwogICAgCiAgICBwcm94eV9idWZmZXJpbmcgb2ZmOwogCiAgICAjZ3ppcCBvbjsKCiAgICBzZXJ2ZXIgewogICAgICAgIHNlcnZlcl9uYW1lIGFwaQogICAgICAgIGxpc3RlbiAxMjcuMC4wLjE6ODA4MDsKICAgICAgICBsb2NhdGlvbiAvYXBpIHsKICAgICAgICAgICAgYXBpIHdyaXRlPW9uOwogICAgICAgICAgICBhbGxvdyAxMjcuMC4wLjE7CiAgICAgICAgICAgIGRlbnkgYWxsOwogICAgICAgIH0KICAgIH0KCiAgICBzZXJ2ZXIgewogICAgICAgIGxpc3RlbiA0NDMgc3NsOwogICAgICAgIHNzbF9wcm90b2NvbHMgVExTdjEuMSBUTFN2MS4yIFRMU3YxLjM7CiAgICAgICAgc3NsX2NpcGhlcnMgIU5VTEw6IUxPVzohRVhQT1JUOjNERVM6IU1ENTohYU5VTEw6IWVOVUxMOiFBREg6SElHSDsgICAgICAgIAogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZSAvZXRjL25naW54L3NzbC9jZXJ0LTI5LWRheXMuY3J0OwogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZV9rZXkgL2V0Yy9uZ2lueC9zc2wvY2VydC0yOS1kYXlzLmtleTsJCiAgICB9CgogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSBzZXJ2ZXIyCiAgICAgICAgbGlzdGVuIDg0NDMgc3NsIGRlZmF1bHRfc2VydmVyOwogICAgICAgIHNzbF9wcm90b2NvbHMgVExTVjEuMSBUTFN2MS4yIFRMU3YxLjM7CiAgICAgICAgc3NsX2NpcGhlcnMgQUxMOiFOVUxMOiFMT1c6IUVYUE9SVDohTUQ1OiFhTlVMTDohZU5VTEw6IUFESDpISUdIOyAgICAgICAgCiAgICAgICAgc3NsX2NlcnRpZmljYXRlIC9ldGMvbmdpbngvc3NsL2V4cGlyZWQuY3J0OwogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZV9rZXkgL2V0Yy9uZ2lueC9zc2wvZXhwaXJlZC5rZXk7CQogICAgfQoKICAgIHNlcnZlciB7CiAgICAgICAgc2VydmVyX25hbWUgc2VydmVyMwogICAgICAgIGxpc3RlbiA4NDM4IHNzbDsKICAgICAgICBzc2xfcHJvdG9jb2xzIFRMU3YxLjIgVExTdjEuMzsKICAgICAgICBzc2xfY2lwaGVycyBISUdIOyAgICAgICAgCiAgICAgICAgc3NsX2NlcnRpZmljYXRlIC9ldGMvbmdpbngvc3NsL2NlcnQtMzAwLWRheXMuY3J0OwogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZV9rZXkgL2V0Yy9uZ2lueC9zc2wvY2VydC0zMDAtZGF5cy5rZXk7CQogICAgfQoKICAgIHNlcnZlciB7CiAgICAgICAgc2VydmVyX25hbWUgbXlfc2VydmVyOwogICAgICAgIGxpc3RlbiA5MDkxIGRlZmF1bHRfc2VydmVyOwogICAgICAgIHJldHVybiAyMDAgIkdyZWV0aW5ncy4gaGVsbG8gZnJvbSBodHRwIHdvcmtsb2FkIDEgXG4iOwogICAgfSAgICAgCiAgICBzZXJ2ZXIgewogICAgICAgIHNlcnZlcl9uYW1lIDkwOTMKICAgICAgICBsaXN0ZW4gOTA5MiBkZWZhdWx0X3NlcnZlcjsKICAgICAgICByZXR1cm4gMjAwICJoZWxsbyBmcm9tIGh0dHAgd29ya2xvYWQgMiBcbiI7CiAgICB9CiAgICBzZXJ2ZXIgewogICAgICAgIHNlcnZlcl9uYW1lIDkwOTMKICAgICAgICBsaXN0ZW4gOTA5MyBkZWZhdWx0X3NlcnZlcjsKICAgICAgICByZXR1cm4gMjAwICJoZWxsbyBmcm9tIHN0cmVhbSB3b3JrbG9hZCAxIFxuIjsKICAgIH0KIAogICAgdXBzdHJlYW0gbmdpbngxIHsKICAgICAgICBzZXJ2ZXIgMTI3LjAuMC4xOjkwOTE7CiAgICAgICAgem9uZSBteV9iYWNrZW5kMSAxMDAwMDAwOwogICAgICAgIGtlZXBhbGl2ZSAzMjsKICAgICAgICBxdWV1ZSAxMDsKICAgIH0KICAgIHVwc3RyZWFtIG5naW54MiB7CiAgICAgICAgc2VydmVyIDEyNy4wLjAuMTo5MDkyOwogICAgICAgIHpvbmUgbXlfYmFja2VuZDIgMTAwMDAwMDsKICAgICAgICBrZWVwYWxpdmUgMzI7CiAgICAgICAgcXVldWUgMjA7CiAgICB9CiAKICAgIHNlcnZlciB7CiAgICAgICAgc2VydmVyX25hbWUgc2VydmVyOTk7CiAgICAgICAgc3RhdHVzX3pvbmUgbXlfZnJvbnRlbmQxOwogICAgICAgIGxpc3RlbiAxMjcuMC4wLjE6ODA4MSBkZWZhdWx0X3NlcnZlcjsKICAgICAgICBsb2NhdGlvbiAvZnJvbnRlbmQxIHsKICAgICAgICAgICAgcHJveHlfcGFzcyBodHRwOi8vbmdpbngxOwogICAgICAgICAgICBwcm94eV9zZXRfaGVhZGVyIEhvc3QgJGhvc3Q7CiAgICAgICAgICAgIHByb3h5X2NhY2hlIGNhY2hlX2JhY2tlbmQxOwogICAgICAgICAgICBzdGF0dXNfem9uZSBteV9sb2NhdGlvbl96b25lOwoKICAgICAgICB9CiAgICB9CiAgICBzZXJ2ZXIgewogICAgICAgIHNlcnZlcl9uYW1lIHNlcnZlcjc7CiAgICAgICAgc3RhdHVzX3pvbmUgbXlfZnJvbnRlbmQyOwogICAgICAgIGxpc3RlbiAxMjcuMC4wLjE6ODA4MiBkZWZhdWx0X3NlcnZlcjsKICAgICAgICBsb2NhdGlvbiAvZnJvbnRlbmQyIHsKICAgICAgICAgICAgcHJveHlfcGFzcyBodHRwOi8vbmdpbngyOwogICAgICAgICAgICBwcm94eV9zZXRfaGVhZGVyIEhvc3QgJGhvc3Q7CiAgICAgICAgICAgIHByb3h5X2NhY2hlIGNhY2hlX2JhY2tlbmQyOwogICAgICAgICAgICBzdGF0dXNfem9uZSBteV9sb2NhdGlvbl96b25lOwoKICAgICAgICB9CiAgICB9CiAgICBzZXJ2ZXIgewogICAgICAgbGlzdGVuIDEyNy4wLjAuMTo4MCBkZWZhdWx0X3NlcnZlcjsKICAgICAgIHNlcnZlcl9uYW1lIDEyNy4wLjAuMTsKICAgICAgIGxvY2F0aW9uIC9uZ2lueF9zdGF0dXMgewogICAgICAgICAgc3R1Yl9zdGF0dXMgb247CiAgICAgICAgICBhbGxvdyAxMjcuMC4wLjE7CiAgICAgICAgICBkZW55IGFsbDsKICAgICAgIH0KICAgIAogICAgICAgIGxvY2F0aW9uIC9hcGkgewogICAgICAgICAgICBhcGkgd3JpdGU9b247CiAgICAgICAgICAgIGFsbG93IDEyNy4wLjAuMTsKICAgICAgICAgICAgZGVueSAgYWxsOwogICAgICAgIH0KICAgIH0KICAgCiAgICBpbmNsdWRlIC9ldGMvbmdpbngvY29uZi5kLyouY29uZjsKfQoKc3RyZWFtIHsKCiAgICB1cHN0cmVhbSBuZ2lueDMgewogICAgICAgIHpvbmUgbXlfc3RyZWFtX2JhY2tlbmQgNjRrOwogICAgICAgIHNlcnZlciAxMjcuMC4wLjE6OTA5MzsKICAgIH0KIAogICAgbG9nX2Zvcm1hdCBiYXNpYyAnJHJlbW90ZV9hZGRyIFskdGltZV9sb2NhbF0gJwogICAgICAgICAgICAgICAgICAgICAnJHByb3RvY29sICRzdGF0dXMgJGJ5dGVzX3NlbnQgJGJ5dGVzX3JlY2VpdmVkICcKICAgICAgICAgICAgICAgICAgICAgJyRzZXNzaW9uX3RpbWUnOwogICAgYWNjZXNzX2xvZyAvdmFyL2xvZy9uZ2lueC9hY2Nlc3MubG9nIGJhc2ljOwogCiAgICBzZXJ2ZXIgewogICAgICAgIGxpc3RlbiA4MDgzOwogICAgICAgIHN0YXR1c196b25lIHRjcF9zdHJlYW1fc2VydmVyOwogICAgICAgIHByb3h5X3Bhc3MgbmdpbngzOwogICAgfQp9Cgo=",
			"type": "string"
		},
		{
			"key": "nginx_conf_base64_clean",
			"value": "IyBDbGVhbiBjb25maWd1cmF0aW9uLiAgbW9kaWZpZWQgYnkgUG9zdG1hbiB1c2luZyB0aGUgTjEgQVBJCnVzZXIgIG5naW54Owp3b3JrZXJfcHJvY2Vzc2VzICBhdXRvOwoKZXJyb3JfbG9nICAvdmFyL2xvZy9uZ2lueC9lcnJvci5sb2cgbm90aWNlOwojcGlkICAgICAgICAvdmFyL3J1bi9uZ2lueC5waWQ7CgojIGlzIHRoaXMgZW5vdWdoIGNvbm5lY3Rpb25zPwoKZXZlbnRzIHsKICAgIHdvcmtlcl9jb25uZWN0aW9ucyA1MTI7Cn0KCmh0dHAgewogICAgaW5jbHVkZSAgICAgICAvZXRjL25naW54L21pbWUudHlwZXM7CgogICAgZGVmYXVsdF90eXBlICBhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07CgogICAgbG9nX2Zvcm1hdCAgbWFpbiAgJyRyZW1vdGVfYWRkciAtICRyZW1vdGVfdXNlciBbJHRpbWVfbG9jYWxdICIkcmVxdWVzdCIgJwogICAgICAgICAgICAgICAgICAnJHN0YXR1cyAkYm9keV9ieXRlc19zZW50ICIkaHR0cF9yZWZlcmVyIiAnCiAgICAgICAgICAgICAgICAgICciJGh0dHBfdXNlcl9hZ2VudCIgIiRodHRwX3hfZm9yd2FyZGVkX2ZvciIgJwogICAgICAgICAgICAgICAgICAnIiRieXRlc19zZW50IiAiJHJlcXVlc3RfbGVuZ3RoIiAiJHJlcXVlc3RfdGltZSIgJwogICAgICAgICAgICAgICAgICAnIiRnemlwX3JhdGlvIiAkc2VydmVyX3Byb3RvY29sICc7CgogICAgYWNjZXNzX2xvZyAgL3Zhci9sb2cvbmdpbngvYWNjZXNzLmxvZyAgbWFpbjsKCiAgICBzZW5kZmlsZSAgICAgICAgb2ZmOwoKICAgIGtlZXBhbGl2ZV90aW1lb3V0ICA2NTsKCiAgICBwcm94eV9jYWNoZV9wYXRoIC9kYXRhL25naW54L2NhY2hlX2JhY2tlbmQxIGtleXNfem9uZT1jYWNoZV9iYWNrZW5kMToxMG07CiAgICBwcm94eV9jYWNoZV9wYXRoIC9kYXRhL25naW54L2NhY2hlX2JhY2tlbmQyIGtleXNfem9uZT1jYWNoZV9iYWNrZW5kMjoxMG07CiAgICAKICAgIHByb3h5X2J1ZmZlcmluZyBvbjsKIAogICAgI2d6aXAgb247CgogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSBhcGkKICAgICAgICBsaXN0ZW4gMTI3LjAuMC4xOjgwODA7CiAgICAgICAgbG9jYXRpb24gL2FwaSB7CiAgICAgICAgICAgIGFwaSB3cml0ZT1vbjsKICAgICAgICAgICAgYWxsb3cgMTI3LjAuMC4xOwogICAgICAgICAgICBkZW55IGFsbDsKICAgICAgICB9CiAgICB9CgogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSB0ZXN0NDU2OwogICAgICAgIGxpc3RlbiA0NDMgc3NsIGRlZmF1bHRfc2VydmVyOwogICAgICAgIHNzbF9wcm90b2NvbHMgVExTdjEuMiBUTFN2MS4zOwogICAgICAgIHNzbF9jaXBoZXJzICFOVUxMOiFMT1c6IUVYUE9SVDohTUQ1OiFhTlVMTDohZU5VTEw6IUFESDpISUdIOyAgICAgICAgCiAgICAgICAgc3NsX2NlcnRpZmljYXRlIC9ldGMvbmdpbngvc3NsL2NlcnQtMzAwLWRheXMuY3J0OwogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZV9rZXkgL2V0Yy9uZ2lueC9zc2wvY2VydC0zMDAtZGF5cy5rZXk7CQogICAgfQoKICAgIHNlcnZlciB7CiAgICAgICAgc2VydmVyX25hbWUgc2VydmVyMgogICAgICAgIGxpc3RlbiA4NDQzIHNzbCBkZWZhdWx0X3NlcnZlcjsKICAgICAgICBzc2xfcHJvdG9jb2xzIFRMU3YxLjIgVExTdjEuMzsKICAgICAgICBzc2xfY2lwaGVycyBBTEw6IU5VTEw6IUxPVzohRVhQT1JUOiFNRDU6IWFOVUxMOiFlTlVMTDohQURIOkhJR0g7ICAgICAgICAKICAgICAgICBzc2xfY2VydGlmaWNhdGUgL2V0Yy9uZ2lueC9zc2wvY2VydC0zMDAtZGF5cy5jcnQ7CiAgICAgICAgc3NsX2NlcnRpZmljYXRlX2tleSAvZXRjL25naW54L3NzbC9jZXJ0LTMwMC1kYXlzLmtleTsJCiAgICB9CgogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSBzZXJ2ZXIzCiAgICAgICAgbGlzdGVuIDg0Mzggc3NsOwogICAgICAgIHNzbF9wcm90b2NvbHMgVExTdjEuMiBUTFN2MS4zOwogICAgICAgIHNzbF9jaXBoZXJzIEhJR0g7ICAgICAgICAKICAgICAgICBzc2xfY2VydGlmaWNhdGUgL2V0Yy9uZ2lueC9zc2wvY2VydC0zMDAtZGF5cy5jcnQ7CiAgICAgICAgc3NsX2NlcnRpZmljYXRlX2tleSAvZXRjL25naW54L3NzbC9jZXJ0LTMwMC1kYXlzLmtleTsJCiAgICB9CgogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSBteV9zZXJ2ZXI7CiAgICAgICAgbGlzdGVuIDkwOTEgZGVmYXVsdF9zZXJ2ZXI7CiAgICAgICAgcmV0dXJuIDIwMCAiR3JlZXRpbmdzLiBoZWxsbyBmcm9tIGh0dHAgd29ya2xvYWQgMSBcbiI7CiAgICB9ICAgICAKICAgIHNlcnZlciB7CiAgICAgICAgc2VydmVyX25hbWUgOTA5MwogICAgICAgIGxpc3RlbiA5MDkyIGRlZmF1bHRfc2VydmVyOwogICAgICAgIHJldHVybiAyMDAgImhlbGxvIGZyb20gaHR0cCB3b3JrbG9hZCAyIFxuIjsKICAgIH0KICAgIHNlcnZlciB7CiAgICAgICAgc2VydmVyX25hbWUgOTA5MwogICAgICAgIGxpc3RlbiA5MDkzIGRlZmF1bHRfc2VydmVyOwogICAgICAgIHJldHVybiAyMDAgImhlbGxvIGZyb20gc3RyZWFtIHdvcmtsb2FkIDEgXG4iOwogICAgfQogCiAgICB1cHN0cmVhbSBuZ2lueDEgewogICAgICAgIHNlcnZlciAxMjcuMC4wLjE6OTA5MTsKICAgICAgICB6b25lIG15X2JhY2tlbmQxIDEwMDAwMDA7CiAgICAgICAga2VlcGFsaXZlIDMyOwogICAgICAgIHF1ZXVlIDEwOwogICAgfQogICAgdXBzdHJlYW0gbmdpbngyIHsKICAgICAgICBzZXJ2ZXIgMTI3LjAuMC4xOjkwOTI7CiAgICAgICAgem9uZSBteV9iYWNrZW5kMiAxMDAwMDAwOwogICAgICAgIGtlZXBhbGl2ZSAzMjsKICAgICAgICBxdWV1ZSAyMDsKICAgIH0KIAogICAgc2VydmVyIHsKICAgICAgICBzZXJ2ZXJfbmFtZSBzZXJ2ZXI5OTsKICAgICAgICBzdGF0dXNfem9uZSBteV9mcm9udGVuZDE7CiAgICAgICAgbGlzdGVuIDEyNy4wLjAuMTo4MDgxIGRlZmF1bHRfc2VydmVyOwogICAgICAgIGxvY2F0aW9uIC9mcm9udGVuZDEgewogICAgICAgICAgICBwcm94eV9wYXNzIGh0dHA6Ly9uZ2lueDE7CiAgICAgICAgICAgIHByb3h5X3NldF9oZWFkZXIgSG9zdCAkaG9zdDsKICAgICAgICAgICAgcHJveHlfY2FjaGUgY2FjaGVfYmFja2VuZDE7CiAgICAgICAgICAgIHN0YXR1c196b25lIG15X2xvY2F0aW9uX3pvbmU7CgogICAgICAgIH0KICAgIH0KICAgIHNlcnZlciB7CiAgICAgICAgc2VydmVyX25hbWUgc2VydmVyNzsKICAgICAgICBzdGF0dXNfem9uZSBteV9mcm9udGVuZDI7CiAgICAgICAgbGlzdGVuIDEyNy4wLjAuMTo4MDgyIGRlZmF1bHRfc2VydmVyOwogICAgICAgIGxvY2F0aW9uIC9mcm9udGVuZDIgewogICAgICAgICAgICBwcm94eV9wYXNzIGh0dHA6Ly9uZ2lueDI7CiAgICAgICAgICAgIHByb3h5X3NldF9oZWFkZXIgSG9zdCAkaG9zdDsKICAgICAgICAgICAgcHJveHlfY2FjaGUgY2FjaGVfYmFja2VuZDI7CiAgICAgICAgICAgIHN0YXR1c196b25lIG15X2xvY2F0aW9uX3pvbmU7CgogICAgICAgIH0KICAgIH0KICAgIHNlcnZlciB7CiAgICAgICBsaXN0ZW4gMTI3LjAuMC4xOjgwIGRlZmF1bHRfc2VydmVyOwogICAgICAgc2VydmVyX25hbWUgMTI3LjAuMC4xOwogICAgICAgbG9jYXRpb24gL25naW54X3N0YXR1cyB7CiAgICAgICAgICBzdHViX3N0YXR1cyBvbjsKICAgICAgICAgIGFsbG93IDEyNy4wLjAuMTsKICAgICAgICAgIGRlbnkgYWxsOwogICAgICAgfQogICAgCiAgICAgICAgbG9jYXRpb24gL2FwaSB7CiAgICAgICAgICAgIGFwaSB3cml0ZT1vbjsKICAgICAgICAgICAgYWxsb3cgMTI3LjAuMC4xOwogICAgICAgICAgICBkZW55ICBhbGw7CiAgICAgICAgfQogICAgfQogICAKICAgIGluY2x1ZGUgL2V0Yy9uZ2lueC9jb25mLmQvKi5jb25mOwp9CgpzdHJlYW0gewoKICAgIHVwc3RyZWFtIG5naW54MyB7CiAgICAgICAgem9uZSBteV9zdHJlYW1fYmFja2VuZCA2NGs7CiAgICAgICAgc2VydmVyIDEyNy4wLjAuMTo5MDkzOwogICAgfQogCiAgICBsb2dfZm9ybWF0IGJhc2ljICckcmVtb3RlX2FkZHIgWyR0aW1lX2xvY2FsXSAnCiAgICAgICAgICAgICAgICAgICAgICckcHJvdG9jb2wgJHN0YXR1cyAkYnl0ZXNfc2VudCAkYnl0ZXNfcmVjZWl2ZWQgJwogICAgICAgICAgICAgICAgICAgICAnJHNlc3Npb25fdGltZSc7CiAgICBhY2Nlc3NfbG9nIC92YXIvbG9nL25naW54L2FjY2Vzcy5sb2cgYmFzaWM7CiAKICAgIHNlcnZlciB7CiAgICAgICAgbGlzdGVuIDgwODM7CiAgICAgICAgc3RhdHVzX3pvbmUgdGNwX3N0cmVhbV9zZXJ2ZXI7CiAgICAgICAgcHJveHlfcGFzcyBuZ2lueDM7CiAgICB9Cn0K",
			"type": "string"
		}
	]
}
